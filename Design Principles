# Концепции ООП
        - Абстракция
        - Инкапсуляция
        - Полиморфизм
        - Наследование

# Принципы
        - Выделите аспекты приложения, которые могут изменяться, и отделите их от тех, которые всегда являются.
        - Программируйте на уровне интерфейса, а не на уровне реализации.
        - Отдавайте предпочтение композиции перед наследованием.
        - Стремление к слабой связанности взаимодействующих объектов

# Паттерн Стратегия
        - определяет семейство алгоритмов, инкапсулирует каждый из них и обеспечивает их взаимозаменяемость.
        - паттерн позволяет модифицировать алгоритмы независимо от их использования на стороне клиента.
        - "для реализации разных вариантов поведения используется паттерн Стратегия".
        - поведение объекта инкапсулируется в отдельном наборе классов, которыф легко расширяется и может изменяться в процессе исполнения.

# Паттерн Наблюдатель
        - Издатели(субъект) + Подписчики(наблюдатель) = паттерн Наблюдатель
        - Субъект обладает некоторыми данными, наблюдатели регистрируются у субъекта и начинают получать оповещение при изменении этих данных субъекта.
        - Когда данные субъекта изменяются, наблюдатели получают оповещение.
        - Паттерн определяет отношение "один ко многим" мужду субъектами таким образом, что при изменении одного объекта, происходит моментальное оповещение всех зависимых субъектов.
